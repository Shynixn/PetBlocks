{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>PetBlocks is a Minecraft Bukkit plugin to use blocks as pets in minecraft.</p> <p>PetBlocks v8 Docs</p> <p>Are you looking for the old wiki? You can download it here. A copy can also be found in the web archive.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Adds a new pet to every player</li> <li>Use blocks or custom heads as skins for your pet</li> <li>Create your own Pet GUI menus</li> <li>Pets are fully programmable using embedded JavaScript + Pet Config files</li> <li>PetBlocks are fully controlable by commands</li> <li>Command can be called by the console, other plugins, command blocks and players</li> <li>Extensive Permission system</li> <li>Support for custom models</li> <li>Easy integration into your server.</li> <li>PlaceHolderApi Support</li> <li>Multiple pets per player (Premium)</li> </ul>"},{"location":"api/","title":"Api","text":"<p>PetBlocks offers a Developer Api, however it is not published to Maven Central or any other distribution system yet. You need to directly reference the PetBlocks.jar file.</p>"},{"location":"api/#usage","title":"Usage","text":"<p>Add a dependency in your plugin.yml</p> <pre><code>softdepend: [ PetBlocks]\n</code></pre> <p>Take a look at the following example: <pre><code>public class YourPlugin extends JavaPlugin {\n    @Override\n    public void onEnable() {\n        // Always gets the same instance of the PetService.\n        PetService petService = Bukkit.getServicesManager().load(PetService.class);\n\n        Player player = Bukkit.getPlayer(\"YourPlayerName\");\n        Plugin plugin = this;\n\n        // GetPetsFromPlayerAsync may retrieve the pet from the Database or the InMemory cache.\n        petService.getPetsFromPlayerAsync(player).thenAccept(pets -&gt; {\n            // Main Thread\n            if (pets.size() &gt; 0) {\n                // Do not keep the pet instance in your plugin (e.g. in fields). Always retrieve it with getPetsFromPlayerAsync.\n                // If you need to keep the pet instance in high performance scenarios, check if the pet has already been disposed before using it with pet.isDisposed().\n                Pet pet = pets.get(0);\n\n                // All pet methods are safe to be called regardless if the pet is currently spawned or not.\n                pet.call();\n                // Changes are automatically applied to the pet if it is spawned and automatically persisted.\n                pet.setDisplayName(\"Hello World\");\n                pet.setLoop(\"idle\");\n            }\n        }).exceptionally(error -&gt; {\n            plugin.getLogger().log(Level.SEVERE, \"Failed to load pets.\", error);\n            return null;\n        });\n    }\n}\n</code></pre></p>"},{"location":"commands/","title":"Commands","text":"<p>PetBlocks is a command line based pet plugin. This means, you can fully control the pets using commands, which may be executed by players, console,  other plugins, command blocks.</p> <p>e.g. Letting the pet named <code>pet</code> of player <code>Steve98</code> move to a certain location from the console. (The pet has to be in a nearby location)</p> <pre><code>/petblocks moveto pet &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;speed&gt; [player]\n</code></pre> <pre><code>petblocks moveto pet 250 5 300 0.2 Steve98\n</code></pre> <p>Removing the pet under certain conditions</p> <p>You can always take a way the <code>petblocks.pet.spawn</code> permission to remove the pet from players, if they enter certain areas (e.g. joining minigames, entering regions, etc.)</p>"},{"location":"commands/#command-petblock","title":"Command /petblock","text":"<p>Required Permission: <code>petblocks.command</code></p>"},{"location":"commands/#petblock","title":"/petblock","text":"<p>Opens the main GUI of petblocks. You can configure this command in the <code>gui/petblocks_main_menu.yml</code> file.</p>"},{"location":"commands/#command-petblocks","title":"Command /petblocks","text":"<p>Required Permission: <code>petblocks.command</code></p>"},{"location":"commands/#petblocks-create","title":"/petblocks create","text":"<pre><code>/petblocks create &lt;name&gt; &lt;template&gt; [player]\n</code></pre> <p>Creates a new pet for the player with the given pet template.</p> <ul> <li>Name: Identifier of a pet</li> <li>Template: Identifier of a template </li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-delete","title":"/petblocks delete","text":"<pre><code>/petblocks delete &lt;name&gt; [player]\n</code></pre> <p>Deletes the pet of the player.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-list","title":"/petblocks list","text":"<pre><code>/petblocks list [player]\n</code></pre> <p>Lists all pets of a player.</p> <ul> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-call","title":"/petblocks call","text":"<pre><code>/petblocks call &lt;name&gt; [player]\n</code></pre> <p>Spawns and teleports the pet in front of the owner.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-lookat","title":"/petblocks lookat","text":"<pre><code>/petblocks lookat &lt;name&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; [player]\n</code></pre> <p>Makes the pet look at the given location.</p> <ul> <li>Name: Identifier of a pet</li> <li>X: X Coordinate</li> <li>Y: Y Coordinate</li> <li>Z: Z Coordinate</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-lookatowner","title":"/petblocks lookatowner","text":"<pre><code>/petblocks lookatowner [player]\n</code></pre> <p>Makes the pet look at the owner.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-moveto","title":"/petblocks moveto","text":"<pre><code>/petblocks moveto &lt;name&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;speed&gt; [player]\n</code></pre> <p>Makes the pet walk to a given location.</p> <ul> <li>Name: Identifier of a pet</li> <li>X: X Coordinate</li> <li>Y: Y Coordinate</li> <li>Z: Z Coordinate</li> <li>Speed: Walking speed of the pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-movetoowner","title":"/petblocks movetoowner","text":"<pre><code>/petblocks movetoowner &lt;name&gt; &lt;speed&gt; [player]\n</code></pre> <p>Makes the pet walk to the owner.</p> <ul> <li>Name: Identifier of a pet</li> <li>Speed: Walking speed of the pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-hat","title":"/petblocks hat","text":"<pre><code>/petblocks hat &lt;name&gt; [player]\n</code></pre> <p>Makes the owner wear the pet.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-ride","title":"/petblocks ride","text":"<pre><code>/petblocks ride &lt;name&gt; [player]\n</code></pre> <p>Makes the owner ride the pet.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-unmount","title":"/petblocks unmount","text":"<pre><code>/petblocks unmount &lt;name&gt; [player]\n</code></pre> <p>Makes the owner unmount (stop riding/hat) the pet.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-teleport","title":"/petblocks teleport","text":"<pre><code>/petblocks teleport &lt;name&gt; &lt;world&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;yaw&gt; &lt;pitch&gt; [player]\n</code></pre> <p>Teleports the pet to the given location.</p> <ul> <li>Name: Identifier of a pet</li> <li>World: Target world</li> <li>X: X Coordinate</li> <li>Y: Y Coordinate</li> <li>Z: Z Coordinate</li> <li>Yaw: Horizontal Axe</li> <li>Pitch: Vertical Axe</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-velocity","title":"/petblocks velocity","text":"<pre><code>/petblocks velocity &lt;name&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; [player]\n</code></pre> <p>Launches the pet into the given direction.</p> <ul> <li>Name: Identifier of a pet</li> <li>X: X Vector</li> <li>Y: Y Vector</li> <li>Z: Z Vector</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-velocityrel","title":"/petblocks velocityrel","text":"<pre><code>/petblocks velocityrel &lt;name&gt; &lt;mx&gt; &lt;my&gt; &lt;mz&gt; [oy] [player]\n</code></pre> <p>Launches the pet into the current looking direction with the given multipliers. </p> <ul> <li>Name: Identifier of a pet</li> <li>MX: Multiplier in X direction. Try to set it to 1 first.</li> <li>MY: Multiplier in Y direction. Try to set it to 1 first.</li> <li>MZ: Multiplier in Z direction. Try to set it to 1 first.</li> <li>OY: Optional overwrite for the base y value. If you set this to 0.5 or higher, the pet always gets launched upwards.</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-skintype","title":"/petblocks skintype","text":"<pre><code>/petblocks skintype &lt;name&gt; &lt;material&gt; [durability] [player]\"\n</code></pre> <p>Changes the material used as a head. </p> <ul> <li>Name: Identifier of a pet</li> <li>Material: Minecraft material name e.g. STONE</li> <li>Durability of the type. Only used in old minecraft versions &lt; 1.16.5. Set it to 0 in modern minecraft versions.</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-skinnbt","title":"/petblocks skinnbt","text":"<pre><code>/petblocks skinnbt &lt;name&gt; &lt;nbt&gt; [player]\n</code></pre> <p>Changes the NBT tags of the head item. </p> <p>Works in Minecraft versions below 1.20.5. Use the <code>/petblocks skincomponent</code> command for Minecraft &gt;= 1.20.5.</p> <ul> <li>Name: Identifier of a pet</li> <li>NBT: Standard Minecraft NBT format. e.g. {Unbreakable:1}</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-skincomponent","title":"/petblocks skincomponent","text":"<pre><code>/petblocks skincomponent &lt;name&gt; &lt;datacomponent&gt; [player]\n</code></pre> <p>Changes the Data Component tags of the head item. Data Components replace NBT tags since the release of Minecraft 1.20.5.</p> <p>See https://minecraft.wiki/w/Data_component_format for details. Use the <code>/petblocks skinnbt</code> command for Minecraft server below 1.20.5.</p> <ul> <li>Name: Identifier of a pet</li> <li>DataComponent: Data components in JSON format. e.g. {\"minecraft:unbreakable\":true}</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-skinbase64","title":"/petblocks skinbase64","text":"<pre><code>/petblocks skinbase64 &lt;name&gt; &lt;skin&gt; [player]\n</code></pre> <p>Changes the head material to player_head and sets the base64 encoded texture url. </p> <ul> <li>Name: Identifier of a pet</li> <li>Skin: Bas64 Encoded Texture value e.g. <code>eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYThhZDZmYzEyNzA4NDQ2ZWI2NmM3NTY5ZTI4ZDVlMjUyMWQyMTQ2MzQ4YjQ4YmY2YzQ3ZjU0OGQ5ZWVjNDYwYSJ9fX0=</code> on https://minecraft-heads.com/custom-heads/humanoid/67436-beegsmol-mumei </li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-skinheaddatabase","title":"/petblocks skinheaddatabase","text":"<pre><code>/petblocks skinheaddatabase &lt;name&gt; &lt;hdbId&gt; [player]\n</code></pre> <p>Changes the head material to player_head and sets the texture url from a skin loaded by the HeadDatabase plugin.</p> <ul> <li>Name: Identifier of a pet</li> <li>HdbId: Internal id the HeadDatabase plugin uses.</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-rename","title":"/petblocks rename","text":"<pre><code>/petblocks rename &lt;name&gt; &lt;displayname&gt; [player]\n</code></pre> <p>Changes the display name of the pet. Does not accept spaces. Underlines '_' are automatically replaced by spaces. Allows values should be set in the <code>config.yml</code>.</p> <ul> <li>Name: Identifier of a pet</li> <li>DisplayName: Name hovering above the pet, which supports ChatColors.</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-visibility","title":"/petblocks visibility","text":"<pre><code>/petblocks visibility &lt;name&gt; &lt;type&gt; [player]\n</code></pre> <p>Changes who can see the pet. </p> <ul> <li>Name: Identifier of a pet</li> <li>Types: Possibles values: <code>ALL</code>, <code>OWNER</code>, <code>NOBODY</code></li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-loop","title":"/petblocks loop","text":"<pre><code>/petblocks loop &lt;name&gt; &lt;loop&gt; [player]\n</code></pre> <p>Changes which loop from the template is being executed by the pet. Example loops are <code>idle</code>.</p> <ul> <li>Name: Identifier of a pet</li> <li>Loop: Identifier of a loop in the template of the pet.</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-template","title":"/petblocks template","text":"<pre><code>/petblocks template &lt;name&gt; &lt;template&gt; [player]\n</code></pre> <p>Changes the template of a pet without recreating the pet.</p> <ul> <li>Name: Identifier of a pet</li> <li>Template: Template identifier e.g. classic</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-spawn","title":"/petblocks spawn","text":"<pre><code>/petblocks spawn &lt;name&gt; [player]\n</code></pre> <p>Spawns the pet if it has not already spawned.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-despawn","title":"/petblocks despawn","text":"<pre><code>/petblocks despawn &lt;name&gt; [player]\n</code></pre> <p>Despawns the pet if it has not already despawned.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-toggle","title":"/petblocks toggle","text":"<pre><code>/petblocks toggle &lt;name&gt; [player]\n</code></pre> <p>Toggles the pet spawn state.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-select","title":"/petblocks select","text":"<pre><code>/petblocks select &lt;name&gt; [player]\n</code></pre> <p>Makes the owner select one of his pets as primary pet. This is only helpful if a single player has got multiple pets in PetBlocks-Premium.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-openheaddatabase","title":"/petblocks openheaddatabase","text":"<pre><code>/petblocks openheaddatabase &lt;name&gt; [player]\n</code></pre> <p>Opens the headDatabase inventory with a special hook, which applies the next item you select in the headdatabse gui to the pet.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-breakblock","title":"/petblocks breakblock","text":"<pre><code>/petblocks breakblock &lt;name&gt; &lt;timeToBreak&gt; &lt;dropType&gt; [player]\n</code></pre> <p>Breaks the block the pet is looking at. There is a placeholder, which contains the name of the block type. This command only works on blocks, if the player executing the command has got the permission to break this specific block.  The command is cancel able using the cancel command. Breaking a block is automatically cancelled on certain actions. e.g. a pet looks at a player, a pet starts moving</p> <ul> <li>Name: Identifier of a pet</li> <li>TimeToBreak: Time in ticks (20 ticks = 1 second) to break a block</li> <li>DropType: Describes what happens to the dropped item (VANISH, DROP, SEND_TO_OWNER_INVENTORY). Multiple drop types can be specified by comma separation. e.g. SEND_TO_OWNER_INVENTORY,DROP tries to send it to the owner inventory first, if full, it drops it</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-cancel","title":"/petblocks cancel","text":"<pre><code>/petblocks cancel &lt;name&gt; [player]\n</code></pre> <p>Cancels any long running actions like breaking a block.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-snap","title":"/petblocks snap","text":"<pre><code>/petblocks snap &lt;name&gt; [player]\n</code></pre> <p>Rotates the pet to the exact line of the nearest x or z axe.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-moveforward","title":"/petblocks moveforward","text":"<pre><code>/petblocks moveforward &lt;name&gt; &lt;speed&gt; [player]\n</code></pre> <p>Lets the pet move forward in its current direction. Executing the snap command before executing this is helpful to move in a straight direction. If the pet reaches a cliff (1 block difference), moving forward stops.</p> <ul> <li>Name: Identifier of a pet</li> <li>Speed: Speed parameter, should be comma values e.g. 0.3</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-rotaterel","title":"/petblocks rotaterel","text":"<pre><code>/petblocks rotaterel &lt;name&gt; &lt;direction&gt; &lt;angle&gt; [player]\n</code></pre> <p>Rotates the pet relative to its current rotation.</p> <ul> <li>Name: Identifier of a pet</li> <li>Direction: LEFT, RIGHT, UP, DOWN</li> <li>Angle: Angle in degrees e.g. 45, 90</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-entitytype","title":"/petblocks entitytype","text":"<pre><code>/petblocks entitytype &lt;name&gt; &lt;entityType&gt; [player]\n</code></pre> <p>Changes the entity type of the pet. The default type is minecraft:armor_stand</p> <ul> <li>Name: Identifier of a pet</li> <li>EntityType: An entitytype in the minecraft format. e.g. minecraft:bee, minecraft:dolphin, minecraft:armor_stand. For minecraft versions below 1.11, you need to use the entity number instead. </li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-entityvisible","title":"/petblocks entityvisible","text":"<pre><code>/petblocks entityvisible &lt;name&gt; &lt;true/false&gt; [player]\n</code></pre> <p>Changes if the body of an entity is visible. For armorstands this is false, for most of the other entities this should be true.</p> <ul> <li>Name: Identifier of a pet</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-groundoffset","title":"/petblocks groundoffset","text":"<pre><code>/petblocks groundoffset &lt;name&gt; &lt;offset&gt; [player]\n</code></pre> <p>Changes the offset of the body of the entity to the ground. Useful when configuring different entity types.</p> <ul> <li>Name: Identifier of a pet</li> <li>Offset: A numeric comma value. e.g. 0.3, -0.3, 1.0</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#petblocks-variable","title":"/petblocks variable","text":"<pre><code>/petblocks variable &lt;name&gt; &lt;key&gt; &lt;value&gt; [player]\n</code></pre> <p>Sets the value of the variable with the given key. This is useful store arbitrary data into the pet. e.g. health, selected particle, selected sound, etc.</p> <ul> <li>Name: Identifier of a pet</li> <li>Key: A key to store and retrieve a value</li> <li>Value: Arbitrary data to store.</li> <li>Player: Optional player_name/player_UUID parameter targeting a player from the console or command block.</li> </ul>"},{"location":"commands/#command-petblocksgui","title":"Command /petblocksgui","text":"<p>Required Permission: <code>petblocks.command</code></p>"},{"location":"commands/#petblocksgui-open","title":"/petblocksgui open","text":"<pre><code>/petblocksgui open &lt;name&gt; [arguments.../player]\n</code></pre> <p>Starts a new GUI session and opens the GUI with the given name for the executing player. If any other GUIs were open when executing this command, they get discarded from the navigation history.</p> <ul> <li>Name: Identifier of a GUI menu</li> <li>Argument/Player: Optional arguments to provide the GUI with additional arguments and optionally a player to open the GUI for.</li> </ul> <p>Samples:</p> <ul> <li>Opens the inventory for the executing player.</li> </ul> <pre><code>/petblocksgui open simple_sample_menu\n</code></pre> <ul> <li>Opens the inventory for the player named \"Pikachu\".</li> <li>The slash separates arguments with the player name (in this case there are 0 arguments)</li> </ul> <pre><code>/petblocksgui open simple_sample_menu / Pikachu\n</code></pre> <ul> <li>Opens the inventory with additional arguments which can be accessed via the placeholders. <code>%petblocks_gui_param1%</code> is now <code>123456</code>.</li> </ul> <pre><code>/petblocksgui open simple_sample_menu 123456\n</code></pre> <ul> <li>Opens the inventory with additional arguments which can be accessed via the placeholders for the player named \"Pikachu\". <code>%petblocks_gui_param1%</code> is now <code>123456</code> <code>%petblocks_gui_param2%</code> is now <code>abcde</code>.</li> <li>The slash separates arguments with the player name</li> </ul> <pre><code>/petblocksgui open simple_sample_menu 123456 abcde / Pikachu\n</code></pre>"},{"location":"commands/#petblocksgui-next","title":"/petblocksgui next","text":"<pre><code>/petblocksgui next &lt;name&gt; [arguments.../player]\n</code></pre> <p>Reuses the existing GUI session (or starts a new one if it is not available) and opens the GUI with the given name for the executing player. If any other GUIs were open when executing this command, they get put into the navigation history. Executing <code>/petblocksgui back</code> reopens the previous GUI.</p> <ul> <li>Name: Identifier of a GUI menu</li> <li>Argument/Player: Optional arguments to provide the GUI with additional arguments. See the open command for samples.</li> </ul>"},{"location":"commands/#petblocksgui-back","title":"/petblocksgui back","text":"<pre><code>/petblocksgui back [player]\n</code></pre> <p>Checks if the current GUI session contains a previously opened GUI. If that is the case, the previous GUI is opened and the current GUI is discarded. If not GUI is found, the current GUI is simply closed.</p> <ul> <li>Player: Optional player argument to execute the action for another player.</li> </ul>"},{"location":"commands/#petblocksgui-close","title":"/petblocksgui close","text":"<pre><code>/petblocksgui close [player]\n</code></pre> <p>Closes the current GUI and clears the GUI session and navigation history.</p> <ul> <li>Player: Optional player argument to execute the action for another player.</li> </ul>"},{"location":"custommodels/","title":"Custom Models","text":"<p>PetBlocks can be used to build custom pets with custom models. A bee model is shown below.</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"custommodels/#tutorial","title":"Tutorial","text":"<p>Important</p> <p>There are even more ways to achieve custom model pets in modern Minecraft versions. This is only one way to do it.</p> <p>A pet in PetBlocks is an Armorstand with an item on its head. The NBT tags of this item can be freely manipulated in your <code>pet.yml</code>.  Therefore, we can add the NBT tag called <code>CustomModelData</code> on the itemstack and display a custom model instead of the block item.</p> <p>The first step is to create a resource pack. A good starting point to create a resource pack with CustomModelData can be found here: https://www.planetminecraft.com/forums/communities/texturing/new-1-14-custom-item-models-tuto-578834/</p> <p>Secondly, update the NBT tags in the <code>pet.yml</code> file.</p> <p><code>nbt: '{CustomModelData:mycustommodelname}'</code></p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#can-i-use-petblocks-to-attack-enemies-eg-zombies-or-other-players","title":"Can I use PetBlocks to attack enemies (e.g. Zombies) or other players?","text":"<p>Pets in PetBlocks can be programmed in the pet.yml file to perform such behaviors. You would need a PlaceHolderApi placeholder which contains the location of the entity you want to attack (will be added in a future update to PetBlocks, but there may already be plugins out there, which provide that). Then, create a new loop where the pet moves to to the entity using the <code>/petblocks moveTo &lt;x&gt; &lt;y&gt; &lt;z&gt;</code> command. Once the pet is near the entity, make it jump using <code>/petblocks velocity &lt;x&gt; &lt;y&gt; &lt;z&gt;</code> and execute command to damage the entity <code>/damage @e[type=zombie,limit=1,sort=nearest] 20</code></p>"},{"location":"faq/#how-can-i-use-petblocks-for-an-older-minecraft-version","title":"How can I use PetBlocks for an older Minecraft version?","text":"<p>Maintaining backwards compatibility is very hard and actively discouraged by spigot. I do my best to add more and more workarounds. However, it has become so much work, that you can only download them by becoming a Patreon https://www.patreon.com/Shynixn.</p>"},{"location":"gui/","title":"GUI","text":"<p>PetBlocks comes with a powerful embedded GUI plugin, which supports Minecraft 1.8.9 - Latest.</p> <p>The default PetBlocks GUI can be opened with the command <code>/petblock</code>. Make sure you have all the required permissions for all GUI pages.</p>"},{"location":"gui/#creating-your-own-gui","title":"Creating your own GUI","text":"<p>The easiest way to get started is by editing the existing PetBlocks GUI and observing the changes.</p> <p>The workflow is like that:</p> <ul> <li>Learn about all the available properties from the <code>/PetBlocks/gui/simple_sample_menu.yml</code> file.</li> <li>Edit one of the gui yaml files in the <code>/PetBlocks/gui</code> folder.</li> <li>Execute <code>/petblocks reload</code>.</li> <li>Open the GUI with <code>/petblocksgui open &lt;name&gt;</code></li> </ul>"},{"location":"gui/#starting-from-scratch","title":"Starting from Scratch","text":"<ol> <li>Copy the <code>simple_sample_menu.yml</code> and rename it to <code>my_first_menu.yml</code>.</li> <li>Open the <code>my_first_menu.yml</code> in an editor like VSCode or NotePad++</li> <li>At the top of the file change the unique identifier of the GUI to</li> </ol> <pre><code>name: \"my_first_menu\"\n</code></pre> <ol> <li>Join your server and execute the following command. This command should always be executed after you have made changes in your <code>.yml</code> files.</li> </ol> <pre><code>/petblocks reload\n</code></pre> <ol> <li>Execute the following command to open your GUI.</li> </ol> <pre><code>/petblocksgui open my_first_menu\n</code></pre> <ol> <li>The GUI should now open for you. If it does not, check your console log for yaml file parsing errors. Correct your <code>my_first_menu.yml</code> or start over by deleting it.</li> </ol>"},{"location":"gui/#attaching-a-custom-command-to-your-menu","title":"Attaching a custom command to your menu","text":"<ol> <li>Let's assume you want to open the GUI with the command <code>/mycoolgui</code>.</li> <li>Edit the command section in your <code>my_first_menu.yml</code> to your needs.</li> </ol> <pre><code>command: \"mycoolgui\"\n</code></pre>"},{"location":"gui/#customizing-the-gui-menu","title":"Customizing the GUI menu","text":"<ol> <li>There are many different ways to customize the GUI. Like displaying the items, executing certain commands and hiding/showing items on certain conditions.</li> <li>Please take a look into the <code>simple_sample_menu.yml</code> file again. Each available options is explained with a short comments.</li> <li>If the comment mentiones <code>Required.</code> You need to set this property. If it says <code>Optional</code> you do not need to set it.</li> <li>As an easy test, locate the <code>minecraft:gold_block</code> in your <code>my_first_menu.yml</code> and replace it with <code>minecraft:diamond_block</code>. After you gave done that simply execute <code>/petblocks reload</code> again and open the GUI <code>/mycoolgui</code>.</li> </ol>"},{"location":"permission/","title":"Permission","text":"<p>The following permissions are available in PetBlocks.</p>"},{"location":"permission/#levels","title":"Levels","text":"<ul> <li>User: A permission all players can have.</li> <li>Admin/User: Depending on your server, you may give this permission to your players. If you are not sure, try to build   your server around not giving this permission to your players.</li> <li>Admin: A permission only Admins should have.</li> </ul>"},{"location":"permission/#minimum-required-permissions","title":"Minimum Required Permissions","text":"Permission Level Description petblocks.command User Allows to use the /petblocks command. petblocks.pet.spawn User Required permission to see the pet. If you remove this permission from a player, the pet automatically despawns. petblocks.pet.amount.1 User The slot where the pet is stored. 1 is the default slot."},{"location":"permission/#all-permissions","title":"All Permissions","text":"Permission Level Description petblocks.command User Allows to use the /petblocks command. petblocks.pet.spawn User Required permission to see the pet. If you remove this permission from a player, the pet automatically despawns. petblocks.pet.amount.1 User The slot where the pet is stored.  1 is the default slot. petblocks.pet.amount.[number] User The slot where the pet is stored. e.g. petblocks.pet.amount.1 (slot 1) and petblocks.pet.amount.2 (slot 2) petblocks.gui.petblocks_main_menu User Allows to access the main GUI of PetBlocks. petblocks.gui.petblocks_skins_menu User Allows to access the skins GUI of PetBlocks. petblocks.gui.petblocks_skins_blockskins_menu User Allows to access the block skins GUI of PetBlocks. petblocks.gui.petblocks_skins_petskins_menu User Allows to access the pet skins GUI of PetBlocks. petblocks.gui.petblocks_skins_vehicleskins_menu User Allows to access the vehicle skins GUI of PetBlocks. petblocks.gui.petblocks_skins_plushieskins_menu User Allows to access the vehicle skins GUI of PetBlocks. petblocks.gui.[gui-name] User Allows to access a specific gui. petblocks.pet.select User Allows to mark a pet as selected. Important for GUI petblocks.help User Allows to see the help messages. petblocks.pet.call User Allows to call the pet to the owner. petblocks.pet.ride User Allows to ride a pet. petblocks.pet.hat User Allows to wear the pet like a hat petblocks.pet.unmount User Allows stop riding or stop wearing at pet petblocks.pet.list User Allows to list the pets of a player petblocks.pet.displayName User Allows to rename a pet. petblocks.pet.toggle User Allows to toggle a pet. petblocks.pet.despawn User Allows to despawn at pet. petblocks.pet.create Admin/User Allows to create a new pet. This command should probably be executed by a GUI / Sign / Server Management Plugin. If you set receivePetsOnJoin in the config.yml, you do not need this permission. petblocks.pet.delete Admin/User Allows to delete a pet. It depends on the type of server if you want to give this permission to your players. This command should be executed by a GUI / Sign / Server Management Plugin. petblocks.pet.skin Admin/User Allows to change the skin via command. This command should probably be executed by a GUI / Sign / Server Management Plugin. petblocks.pet.skin.headDataBase Admin/User Allows to change the skin via the HeadDatabase plugin. This command should probably be executed by a GUI / Sign / Server Management Plugin. petblocks.pet.lookat Admin/User Allows to force the pet to look at a given location petblocks.pet.lookatOwner Admin/User Allows to force the pet to look at the owner petblocks.pet.moveto Admin/User Allows to force the pet to move to a given location petblocks.pet.movetoOwner Admin/User Allows to force the pet to move to the owner petblocks.pet.teleport Admin/User Allows to force the pet to teleport to a given location petblocks.pet.velocity Admin/User Allows to force the pet to fly to a given direction petblocks.pet.velocityRel Admin/User Allows to force the pet to fly to a given direction petblocks.pet.visibility Admin/User Allows to change the pet visibility. petblocks.pet.loop Admin/User Allows to change the pet loop. A loop is discussed further in the pet customization section. petblocks.pet.loop Admin/User Allows to change the pet loop. A loop is discussed further in the pet customization section. petblocks.pet.setTemplate Admin/User Allows to change the template of a pet. petblocks.pet.select Admin/User Allows to mark a pet as selected. This is helpful for placeholders. petblocks.pet.openHeadDatabase Admin/User Allows to open the headDatabase menu using PetBlocks. petblocks.pet.template.[name] Admin/User If you give your players access to <code>petblocks.pet.create</code>, each individual template is still locked by this permission. petblocks.pet.breakBlock Admin/User Allows to use the /petblocks breakblock command petblocks.pet.cancel Admin/User Allows to use the /petblocks cancel command petblocks.pet.snap Admin/User Allows to use the /petblocks snap command petblocks.pet.moveRel Admin/User Allows to use the /petblocks moveforward command petblocks.pet.rotateRel Admin/User Allows to use the /petblocks rotaterel command petblocks.pet.entityType Admin/User Allows to use the /petblocks entitytype command petblocks.pet.entityVisibility Admin/User Allows to use the /petblocks entityvisible command petblocks.pet.groundOffset Admin/User Allows to use the /petblocks groundOffset command petblocks.pet.variable Admin Allows to use the /petblocks variable command petblocks.pet.manipulateOther Admin Allows to manipulate the pets of other players. e.g. Changing skins, etc. petblocks.reload Admin Permission to use the /petblocks reload command."},{"location":"placeholders/","title":"PlaceHolders","text":"<p>The following placeholders are available in PetBlocks and can also be used via PlaceHolderApi.</p> <p>PlaceHolder Api</p> <p>As PetBlocks supports multiple pets per player, you need to select the pet in your placeholders. You can do this by appending the pet slot <code>_1</code> <code>_2</code> etc. or use the <code>/petblocks select &lt;name&gt;</code> command to set a pet as selected which can be retrieved using <code>_selected</code>. This results into placeholders such as e.g. <code>%petblocks_pet_displayName_1%</code> or <code>%petblocks_pet_displayName_selected%</code>. This is only relevant in external plugins. For actions in PetBlocks, you can directly use the placeholders below.</p> Player PlaceHolders Description %petblocks_owner_name% Player name of the owner of a pet. %petblocks_owner_displayName% Player displayName of the owner of a pet. %petblocks_owner_locationWorld% Name of the world the owner of a pet is inside. %petblocks_owner_locationX% X coordinate of the owner of a pet. %petblocks_owner_locationY% Y coordinate of the owner of a pet. %petblocks_owner_locationZ% Z coordinate of the owner of a pet. %petblocks_owner_locationYaw% Yaw rotation of the owner of a pet. %petblocks_owner_locationPitch% Yaw rotation of the owner of a pet. %petblocks_owner_itemMainHand_type% Name of the item type in the owner's main hand %petblocks_owner_isFlying% True if the owner is currently flying, false if not. Pet PlaceHolders Description %petblocks_pet_name% Id of a pet %petblocks_pet_displayName% Displayname of a pet %petblocks_pet_distanceToOwner% Distance from the pet to the owner. If the owner is in another world, this value becomes very high. %petblocks_pet_isSpawned% True if the pet is spawned, false if not. %petblocks_pet_template% Name of the template a pet uses. %petblocks_pet_visibility% Visibility Type a pet uses. %petblocks_pet_isMounted% True if the owner rides the pet or uses it as a hat. %petblocks_pet_loop% Name of the loop a pet currently executes. %petblocks_pet_locationWorld% Name of the world the pet is inside. %petblocks_pet_locationX% X coordinate of the pet. %petblocks_pet_locationY% Y coordinate of the pet. %petblocks_pet_locationZ% Z coordinate of the pet. %petblocks_pet_locationYaw% Yaw rotation of the pet. %petblocks_pet_locationPitch% Yaw rotation of the pet. %petblocks_pet_itemType% The head item type of the pet. %petblocks_pet_itemNbt% The head item NBT of the pet. &lt; 1.20.5 %petblocks_pet_itemComponent% The head item data component of the pet. &gt;= 1.20.5 %petblocks_pet_itemHeadBase64% The head item Base64 Skin Url of the pet. %petblocks_pet_isBreakingBlock% True if the pet is currently breaking a block, false if not. %petblocks_pet_blockInFrontType% Name of the block type the pet is looking at Event Player PlaceHolders Description %petblocks_eventPlayer_name% Player name of the event trigger player. %petblocks_eventPlayer_displayName% Player displayName of the event trigger player. %petblocks_eventPlayer_locationWorld% Name of the world event trigger player of a pet is inside. %petblocks_eventPlayer_locationX% X coordinate of the event trigger player. %petblocks_eventPlayer_locationY% Y coordinate of the event trigger player. %petblocks_eventPlayer_locationZ% Z coordinate of the event trigger player. %petblocks_eventPlayer_locationYaw% Yaw rotation of the event trigger player. %petblocks_eventPlayer_locationPitch% Yaw rotation of the event trigger player. %petblocks_eventPlayer_itemMainHand_type% Name of the item type in the players's main hand %petblocks_eventPlayer_isFlying% True if the player is currently flying, false if not. GUI PlaceHolders Description %petblocks_player_name% Player name of the player clicking in the current inventory. %petblocks_player_displayName% Player displayName of the player session in the current inventory. %petblocks_gui_name% Name of the current inventory. %petblocks_gui_backName% Name of the previous inventory (if you have multiple sub pages) %petblocks_gui_param1% A GUI can have up to 9 parameters. This placeholders access number 1. %petblocks_gui_param2% A GUI can have up to 9 parameters. This placeholders access number 2. %petblocks_gui_param3% A GUI can have up to 9 parameters. This placeholders access number 3. %petblocks_gui_param4% A GUI can have up to 9 parameters. This placeholders access number 4. %petblocks_gui_param5% A GUI can have up to 9 parameters. This placeholders access number 5. %petblocks_gui_param6% A GUI can have up to 9 parameters. This placeholders access number 6. %petblocks_gui_param7% A GUI can have up to 9 parameters. This placeholders access number 7. %petblocks_gui_param8% A GUI can have up to 9 parameters. This placeholders access number 8. %petblocks_gui_param9% A GUI can have up to 9 parameters. This placeholders access number 9."},{"location":"receivingpets/","title":"Giving Pets to Players","text":"<p>Once you have setup the permission, join your server. The PetBlocks default configuration creates a pet with template <code>classic</code> for you and makes it spawn in front of you. If you cannot see the pet, try executing <code>/petblocks call pet</code> or review your permissions again.</p> <p>Make sure your players have this permission to see their pet: <pre><code>petblocks.pet.spawn\npetblocks.pet.amount.1   \n</code></pre></p> <p>The next step is to decide, how you want your players to receive a pet. There are multiple options below.</p>"},{"location":"receivingpets/#receiving-a-pet-on-first-join","title":"Receiving a pet on first join","text":"<p>This is enabled per default and can be changed in the <code>config.yml</code> under <code>pet/receivePetsOnJoin</code>. This creates a new database entry for each joining player, regardless if he has the spawn permission or not. The player requires the minimum <code>petblocks.pet.spawn</code> to see their pet.</p> <p>If you want to receive no pets on join and unlock pets later own (e.g. for shops or VIP perks), change this to: </p> <pre><code>pet:\n  receivePetsOnJoin: []\n</code></pre> <p>If you want to receive multiple pets (PetBlocks-Premium only) on first join. Append other pets below it. They have to have different names.</p> <pre><code>pet:\n  receivePetsOnJoin:\n    - name: \"pet1\"\n      template: \"classic\"\n    - name: \"pet2\"\n      template: \"classic\"      \n</code></pre> <p>In order to configure, if the pet should automatically spawn in front of the player on creation, open the template  <code>plugins/PetBlocks/pets/pet_classic.yml</code>. Set <code>pet/spawned</code> to <code>true</code> or <code>false</code>.</p>"},{"location":"receivingpets/#receiving-pets-using-a-shop","title":"Receiving pets using a shop","text":"<p>There are many ways how you can handle it. These are just examples below:</p>"},{"location":"receivingpets/#option-1-just-selling-skins-for-your-pet-easy","title":"Option 1 - Just selling skins for your pet (easy)","text":"<ol> <li>Build a shop GUI</li> <li>Keep the receive pet on join settings, the player should receive a pet everytime. </li> <li>Invent a new permission for each pet you would like to sell like <code>petblocks.pettype.&lt;yourpettype&gt;</code> e.g. <code>petblocks.pettype.pikachu</code>.</li> <li>Once a player buys the item in your shop, give them your newly invented permission e.g. <code>petblocks.pettype.pikachu</code></li> <li>Show an item in your GUI to change the skin to pikachu only, if the player has got the newly invented permission e.g. <code>petblocks.pettype.pikachu</code></li> <li>Execute the command with server level permission:</li> </ol> <pre><code>/petblocks skinbase64 pet eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOTdlYmNlZjQ2ODNjZGI3MTYzZTk2OWU0ZTIyNjlmMzY3M2E1ZDVlNmI3OGUwNmZhZWU0NWJjZjdjNDljMzk3In19fQ== %petblocks_owner_name%\n</code></pre>"},{"location":"receivingpets/#option-2-state-handling-of-pets-hard","title":"Option 2 - State handling of pets (hard)","text":"<ol> <li>Build a shop GUI</li> <li>Disable receive pet on join like shown above</li> <li>Invent a new permission for each pet you would like to sell like <code>petblocks.pettype.&lt;yourpettype&gt;</code> e.g. <code>petblocks.pettype.pikachu</code>. </li> <li>Once a player buys the item in your shop, give them your new invented permission e.g. <code>petblocks.pettype.pikachu</code></li> <li>Build a pet management GUI</li> <li>Create a new item which is only visible if the player has obtained the e.g. <code>petblocks.pettype.pikachu</code> permission.</li> <li>When the player clicks on that item, execute the following command with server level permission:</li> </ol> <pre><code>/petblocks create &lt;petName&gt; &lt;templateName&gt; %petblocks_owner_name%\n</code></pre> <p>Executing the create command multiple times is fine, it does not do anything if the pet already exists.</p>"},{"location":"receivingpets/#option-3-free-creationdeletion-of-pets-for-players-easy","title":"Option 3 - Free creation/deletion of pets for players (easy)","text":"<ol> <li>Give your players the permission to the following</li> </ol> <pre><code>petblocks.pet.create\npetblocks.pet.delete\npetblocks.pet.amount.1\n</code></pre> <ol> <li>Disable receive pet on join like shown above</li> <li>Build a shop GUI</li> <li>Once a player buys the item in your shop, give them the permission to the petblocks template e.g. <code>petblocks.pet.template.classic</code>.</li> <li>Let the player freely execute <code>/petblocks create &lt;petName&gt; classic</code> and  <code>/petblocks delete &lt;petName&gt;</code> . You can also setup this in a GUI.</li> </ol>"},{"location":"template/","title":"Template","text":"<p>PetBlocks allows you to create templates, how a pet is going to look like and how it is going to behave. You can fully customize the behaviour and program the pets to perform certain actions.</p> <p>PetBlocks provides you with a starting pet template called <code>classic</code>, which can be found in the <code>plugins/PetBlocks/pets/</code> folder. You can copy this template and start desigining your own pets. Make sure to give it a new unique template identifier.</p> <p>Modify a template and execute <code>/petblocks reload</code> to apply the changes to your pet.</p>"},{"location":"template/#static-values","title":"Static Values","text":"<p>Most of the static values are explained in the config file itself. Set them according to your needs.</p> <p>Example for static values are <code>name</code>, <code>version</code> and all initial pet settings under <code>pet:</code>.</p>"},{"location":"template/#events","title":"Events","text":"<p>Events define what actions to execute on certain events. </p> <p>The following events are supported:</p> <ul> <li>leftClick</li> <li>rightClick</li> <li>ridingSneak</li> </ul> <p>For example the <code>leftClick</code> event gets executed when a player left-clicks on the pet. However, it may not be the owner, who clicks on a pet, therefore you need to check if the player is the owner first as a condition.</p> <p>Example:</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"Open the pet GUI\" \n        condition:\n          type: STRING_EQUALS\n          left: \"%petblocks_eventPlayer_name%\"\n          right: \"%petblocks_owner_name%\"\n        type: \"COMMAND\"\n        level: \"PLAYER\"\n        run:\n          - \"/petblocks select %petblocks_pet_name%\"\n          - \"/petblock\"\n</code></pre> <p>If you want to execute nothing when the player rightClicks on the pet, remove all actions.</p> <pre><code>events:\n  rightClick:\n    actions: []\n</code></pre>"},{"location":"template/#building-a-new-action","title":"Building a new action","text":"<p>PlaceHolders</p> <p>You can use placeholders almost anywhere when building actions. You can even use PlaceHolderApi based placeholders.</p> <p>Create a new action and give it an arbitrary name.</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"My new action\" # Required arbitrary name.\n</code></pre> <p>Select the action type. Support actions are <code>COMMAND</code>, <code>DELAY</code>, <code>JAVASCRIPT</code>.</p>"},{"location":"template/#command","title":"COMMAND","text":"<p>Executes one or multiple commands as Console or Player.</p> <p>Vanilla Commands</p> <p>A vanilla command may automatically log to the console and to the chat of every op player. You can disable the output for op players using vanilla game rules such as <code>/gamerule sendCommandFeedback false</code>, <code>/gamerule logAdminCommands false</code>, <code>/gamerule commandBlockOutput false</code>. If you want to hide the output in your console (not recommend), you need to install a LogFilter plugin.</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"My new action\" # Required arbitrary name.\n        type: \"COMMAND\" # Required action type.\n        level: \"SERVER\" # Required for type COMMAND. Possible values are PLAYER (player level permission), SERVER (console level permission)\n</code></pre> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"My new action\" # Required arbitrary name.\n        type: \"COMMAND\" # Required action type.\n        level: \"SERVER\" # Required for type COMMAND. Possible values are PLAYER (player level permission), SERVER (console level permission)\n        run: \n          - \"/say Hello %petblocks_owner_name%\" # Required for type COMMAND. One or more commands are allowed.\n</code></pre>"},{"location":"template/#delay","title":"DELAY","text":"<p>Delays the next action for a certain amount of ticks.</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"Delay Action\" # Required arbitrary name.\n        type: \"DELAY\" # Required action type.\n        ticks: 60 # Required for type DELAY. 60 Ticks delay.\n</code></pre>"},{"location":"template/#javascript","title":"JAVASCRIPT","text":"<p>Executes JavaScript based Code for value calculation</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"JavaScript action\" # Required arbitrary name.\n        type: \"JAVASCRIPT\" # Required action type.\n        initial: \"Cool\" # Required for type JAVASCRIPT. The initial value of the result variable.\n        variable: \"myVariable\" # Required for type JAVASCRIPT. The name of the result variable, which can be read using PlaceHolders.\n        js: |                  # Required for type JAVASCRIPT. Actual multi line JavaScript code.\n          function createText() {\n             var text = \"%petblocks_js_myVariable%\" + \" Plugin\"\n             return text\n          }\n          createText();\n</code></pre>"},{"location":"template/#debugging-actions","title":"Debugging Actions","text":"<p>When you start creating actions, it is very helpful to know, which action is currently being executed and how variables are evaluated. Every action can be logged to your server console by setting the optional <code>debug: true</code> property of an action.</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"Delay Action\" # Required arbitrary name.\n        type: \"DELAY\" # Required action type.\n        ticks: 60 # Required for type DELAY. 60 Ticks delay.\n        debug: true # Optional flag to log this action to the console.\n</code></pre>"},{"location":"template/#restricting-actions","title":"Restricting Actions","text":""},{"location":"template/#permission","title":"Permission","text":"<p>Actions can optionally have the permission tag:</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"My new action\" # Required arbitrary name.\n        permission: \"mycustom.permission\"\n        type: \"COMMAND\" # Required action type.\n        level: \"SERVER\" # Required for type COMMAND. Possible values are PLAYER (player level permission), SERVER (console level permission)\n        run: \n          - \"/say Hello %petblocks_owner_name%\" # Required for type COMMAND. One or more commands are allowed.\n</code></pre>"},{"location":"template/#conditions","title":"Conditions","text":"<p>Actions can optionally have conditions, which support the following types:</p> <ul> <li><code>STRING_EQUALS</code></li> <li><code>STRING_NOT_EQUALS</code></li> <li><code>STRING_EQUALS_IGNORE_CASE</code></li> <li><code>STRING_NOT_EQUALS_IGNORE_CASE</code></li> <li><code>NUMBER_GREATER_THAN</code></li> <li><code>NUMBER_GREATER_THAN_OR_EQUAL</code></li> <li><code>NUMBER_LESS_THAN</code></li> <li><code>NUMBER_LESS_THAN_OR_EQUAL</code></li> <li><code>JAVASCRIPT</code></li> </ul> <p>Try to avoid using <code>JAVASCRIPT</code> because it requires more computation time. It should only be used if you want to create complex boolean expressions.</p> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"My new action\" # Required arbitrary name.\n        condition: # Optional condition tag.\n          type: STRING_EQUALS # Required condition type.\n          left: \"%petblocks_eventPlayer_name%\" \n          right: \"%petblocks_owner_name%\"\n        type: \"COMMAND\" # Required action type.\n        level: \"SERVER\" # Required for type COMMAND. Possible values are PLAYER (player level permission), SERVER (console level permission)\n        run: \n          - \"/say Hello %petblocks_owner_name%\" # Required for type COMMAND. One or more commands are allowed.\n</code></pre> <pre><code>events:\n  rightClick:\n    actions:  # You can add/remove actions as you want here.\n      - name: \"My new action\" # Required arbitrary name.\n        condition: # Optional condition tag.\n          type: JAVASCRIPT # Required condition type.\n          js: \"Math.floor(Math.random() * 100) &lt;= 50\" # 50% chance to execute this command.\n        type: \"COMMAND\" # Required action type.\n        level: \"SERVER\" # Required for type COMMAND. Possible values are PLAYER (player level permission), SERVER (console level permission)\n        run: \n          - \"/say Hello %petblocks_owner_name%\" # Required for type COMMAND. One or more commands are allowed.\n</code></pre>"},{"location":"template/#loops","title":"Loops","text":"<p>Loops define, what the pet should repeatedly do. You can customize and define your own loops using actions.</p> <p>Programmable Pets</p> <p>You can freely build new loops, delete loops and customize the behavior of pets. The actions allow full freedom to  design your pets. </p>"},{"location":"template/#idle-loop","title":"Idle Loop","text":"<p>The idle loop explained:</p> <ol> <li>Delay Action<ol> <li>We wait for 20 ticks.</li> </ol> </li> <li>Look at owner with a 90% change.<ol> <li>The JavaScript condition is evaluated, which returns true 90% of the time</li> <li>The console executes the command <code>/petblocks lookatowner %petblocks_pet_name% %petblocks_owner_name%</code></li> </ol> </li> <li>Switch to moveToOwner if pet is too far away<ol> <li>The JavaScript condition is evaluated, if the distance of the pet to the owner is bigger than 7 blocks.</li> <li>If true, the console executes the command <code>/petblocks loop %petblocks_pet_name% moveToOwner %petblocks_owner_name%</code> , which switches the loop <code>idle</code> to the loop called <code>moveToOwner</code>.</li> <li>If false, this loop continous and starts again from the top with <code>Delay Action</code></li> </ol> </li> </ol> <pre><code>loops:\n  idle: \n    actions:\n      - name: \"Delay Action\"\n        type: \"DELAY\"\n        ticks: 20\n      - name: \"Look at owner with a 90% change.\"\n        condition:\n          type: JAVASCRIPT\n          js: \"Math.floor(Math.random() * 100) &lt;= 90\" # Calculate chance in JavaScript.\n        type: \"COMMAND\"\n        level: \"SERVER\"\n        run:\n          - \"/petblocks lookatowner %petblocks_pet_name% %petblocks_owner_name%\"\n      - name: \"Switch to moveToOwner if pet is too far away\"\n        condition:\n          type: JAVASCRIPT\n          js: \"%petblocks_pet_distanceToOwner% &gt; 7\"\n        type: \"COMMAND\"\n        level: \"SERVER\"\n        run:\n          - \"/petblocks loop %petblocks_pet_name% moveToOwner %petblocks_owner_name%\"\n</code></pre>"},{"location":"template/#movetoowner-loop","title":"MoveToOwner Loop","text":"<p>As we noticed that the loop changes to the loop <code>moveToOwner</code>, we take a look at this loop too.</p> <ol> <li>Recalculate path and start moving to owner.<ol> <li>The console executes the command <code>/petblocks moveToOwner %petblocks_pet_name% 0.2 %petblocks_owner_name%</code></li> </ol> </li> <li>Switch to idle if the pet is beside the player<ol> <li>The JavaScript condition is evaluated, if the distance of the pet to the owner is smaller than 4 blocks.</li> <li>If true, the console executes the command <code>/petblocks loop %petblocks_pet_name% moveToOwner %petblocks_owner_name%</code> , which switches the loop <code>moveToOwner</code> to the loop called <code>idle</code>.</li> <li>If false, the next action is executed.</li> </ol> </li> <li>Teleport pet to player if the pet is too far away for the pathfinder.<ol> <li>The JavaScript condition is evaluated, if the distance of the pet to the owner is bigger than 20 blocks.</li> <li>If true, the command is executed to teleport the pet to the owner location.</li> <li>If false, the next action is executed.</li> </ol> </li> <li>Delay Action<ol> <li>We wait for 20 ticks.</li> <li>The loop continous and starts again from the top with <code>Recalculate path and start moving to owner</code></li> </ol> </li> </ol> <pre><code>loops:\n  moveToOwner:\n    actions:\n      - name: \"Recalculate path and start moving to owner.\"\n        type: \"COMMAND\"\n        level: \"SERVER\"\n        run:\n          - \"/petblocks moveToOwner %petblocks_pet_name% 0.2 %petblocks_owner_name%\"\n      - name: \"Switch to idle if the pet is beside the player\"\n        condition:\n          type: JAVASCRIPT\n          js: \"%petblocks_pet_distanceToOwner% &lt; 4\"\n        type: \"COMMAND\"\n        level: \"SERVER\"\n        run:\n          - \"/petblocks loop %petblocks_pet_name% idle %petblocks_owner_name%\"\n      - name: \"Teleport pet to player if the pet is too far away for the pathfinder.\"\n        condition:\n          type: JAVASCRIPT\n          js: \"%petblocks_pet_distanceToOwner% &gt; 20\"\n        type: \"COMMAND\"\n        level: \"SERVER\"\n        run:\n          - \"/petblocks teleport %petblocks_pet_name% %petblocks_owner_locationWorld% %petblocks_owner_locationX% %petblocks_owner_locationY% %petblocks_owner_locationZ% %petblocks_owner_locationYaw% %petblocks_owner_locationPitch% %petblocks_owner_name%\"\n      - name: \"Delay Action\"\n        type: \"DELAY\"\n        ticks: 20\n</code></pre>"}]}