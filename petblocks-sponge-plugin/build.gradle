import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'org.spongepowered.plugin' version '0.9.0'
    id 'net.minecrell.vanillagradle.server' version '2.2-6'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

minecraft {
    version = '1.12'
    mappings = 'snapshot_20180323'
}

apply plugin: 'jacoco'

shadowJar {
    from sourceSets.main.resources.srcDirs

    archiveName = "$baseName-$version.$extension"

    // Change the output folder of the plugin.
    // destinationDir = new File('D:\\Benutzer\\Temp\\SpongePowered\\Sponge-2825-7.1.6\\mods')

    relocate 'kotlin', 'com.github.shynixn.petblocks.lib.kotlin'
    relocate 'org.intellij', 'com.github.shynixn.petblocks.lib.org.intellij'
    relocate 'org.jetbrains', 'com.github.shynixn.petblocks.lib.org.jetbrains'
    relocate 'javax.inject', 'com.github.shynixn.petblocks.lib.javax.inject'
    relocate 'org.aopalliance', 'com.github.shynixn.petblocks.lib.org.aopalliance'

    exclude "dummyThing"
}

jar {
    destinationDir = shadowJar.destinationDir

    dependsOn shadowJar
    enabled = false
    finalizedBy reobfJar
}

shadowJar.finalizedBy reobfJar

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    failFast = true
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

tasks {
    test {
        testLogging {
            events(TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.STARTED)
            displayGranularity = 0
            showExceptions = true
            showCauses = true
            showStackTraces = true
            exceptionFormat = TestExceptionFormat.FULL
        }
    }
}

task dockerJar(type: Exec, dependsOn: shadowJar) {
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', "docker cp build/libs/. petblocks-sponge-1.12.2:/minecraft/mods"
    } else {
        commandLine 'sh', '-c', "docker cp build/libs/. petblocks-sponge-1.12.2:/minecraft/mods"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
        }
    }
}

repositories {
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://repo.codemc.org/repository/maven-public"
    }
}

dependencies {
    implementation project(':petblocks-core')
    implementation project(':petblocks-api')
    implementation project(':petblocks-sponge-api')

    compileOnly 'com.zaxxer:HikariCP:3.2.0'
    compileOnly 'org.spongepowered:spongeapi:7.1.0'

    implementation 'org.bstats:bstats-sponge:1.7'

    testCompile 'org.jetbrains.kotlin:kotlin-test'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
    testCompile 'org.mockito:mockito-core:2.23.0'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.xerial:sqlite-jdbc:3.23.1'
    testCompile 'org.spongepowered:spongeapi:7.1.0'
    testCompile 'ch.vorburger.mariaDB4j:mariaDB4j:2.2.3'
    testCompile 'mysql:mysql-connector-java:8.0.20'

    testRuntime 'com.zaxxer:HikariCP:3.2.0'
    testRuntime 'org.slf4j:slf4j-jdk14:1.7.25'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}