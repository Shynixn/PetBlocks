package com.github.shynixn.petblocks

import com.github.shynixn.mcutils.common.language.LanguageItem
import com.github.shynixn.mcutils.common.language.LanguageProviderImpl
import com.github.shynixn.petblocks.contract.Language

class PetBlocksLanguageImpl : Language, LanguageProviderImpl() {
    override var playerNotFoundMessage = LanguageItem()
    override var templateNotFoundMessage = LanguageItem()
    override var petNotFoundMessage = LanguageItem()
    override var petNameExistsMessage = LanguageItem()
    override var petCreatedMessage = LanguageItem()
    override var petDeletedMessage = LanguageItem()
    override var petNameChangeMessage = LanguageItem()
    override var petCalledMessage = LanguageItem()
    override var petSpawnedMessage = LanguageItem()
    override var petDespawnedMessage = LanguageItem()
    override var visibilityTypeNotFoundMessage = LanguageItem()
    override var visibilityChangedMessage = LanguageItem()
    override var petSkinTypeChangedMessage = LanguageItem()
    override var petSkinNbtChanged = LanguageItem()
    override var petSkinTypeNotFound = LanguageItem()
    override var petListMessage = LanguageItem()
    override var petRideMessage = LanguageItem()
    override var petUnmountMessage = LanguageItem()
    override var petHatMessage = LanguageItem()
    override var worldNotFoundMessage = LanguageItem()
    override var petLookAtMessage = LanguageItem()
    override var petWalkToLocationMessage = LanguageItem()
    override var cannotParseNumberMessage = LanguageItem()
    override var cannotParseNbtMessage = LanguageItem()
    override var placeHolderPetNotFound = LanguageItem()
    override var petTeleportedMessage = LanguageItem()
    override var petVelocityAppliedMessage = LanguageItem()
    override var petCharacterNotAllowed = LanguageItem()
    override var reloadMessage = LanguageItem()
    override var petLoopNotFound = LanguageItem()
    override var premiumMultiplePets = LanguageItem()
    override var petLoopChangedMessage = LanguageItem()
    override var petTemplateChangeMessage = LanguageItem()
    override var petAmountNotAllowed = LanguageItem()
    override var petSelectedMessage = LanguageItem()
    override var templateNotAllowed = LanguageItem()
    override var speedCannotBeParsed = LanguageItem()
    override var headDatabasePluginNotLoaded = LanguageItem()
    override var errorLoadingTemplatesMessage = LanguageItem()
    override var dropTypeNotFound = LanguageItem()
    override var cancelMessage = LanguageItem()
    override var snapMessage = LanguageItem()
    override var petMoveForwardMessage = LanguageItem()
    override var petRotationTypeNotFound = LanguageItem()
    override var rotationRelMessage = LanguageItem()
    override var entityTypeChangeMessage = LanguageItem()
    override var entityVisibilityChangedMessage = LanguageItem()
    override var groundOffsetChangedMessage = LanguageItem()
    override var groundOffsetCannotBeParsed = LanguageItem()
    override var cannotParseDataComponentMessage = LanguageItem()
    override var maxLength20Characters = LanguageItem()
    override var noPermissionCommand = LanguageItem()
    override var commandUsage = LanguageItem()
    override var commandDescription = LanguageItem()
    override var commandSenderHasToBePlayer = LanguageItem()
    override var cannotParseBoolean = LanguageItem()
    override var createCommandHint = LanguageItem()
    override var deleteCommandHint = LanguageItem()
    override var listCommandHint = LanguageItem()
    override var callCommandHint = LanguageItem()
    override var lookAtCommandHint = LanguageItem()
    override var lookAtOwnerCommandHint = LanguageItem()
    override var moveToCommandHint = LanguageItem()
    override var moveToOwnerCommandHint = LanguageItem()
    override var hatCommandHint = LanguageItem()
    override var rideCommandHint = LanguageItem()
    override var unmountCommandHint = LanguageItem()
    override var teleportCommandHint = LanguageItem()
    override var velocityCommandHint = LanguageItem()
    override var skinTypeCommandHint = LanguageItem()
    override var skinNbtCommandHint = LanguageItem()
    override var skinComponentCommandHint = LanguageItem()
    override var skinBase64CommandHint = LanguageItem()
    override var skinHeadDatabaseCommandHint = LanguageItem()
    override var renameCommandHint = LanguageItem()
    override var visibilityCommandHint = LanguageItem()
    override var loopCommandHint = LanguageItem()
    override var templateCommandHint = LanguageItem()
    override var spawnCommandHint = LanguageItem()
    override var deSpawnCommandHint = LanguageItem()
    override var toggleCommandHint = LanguageItem()
    override var selectCommandHint = LanguageItem()
    override var openHeadDatabaseCommandHint = LanguageItem()
    override var breakBlockCommandHint = LanguageItem()
    override var cancelCommandHint = LanguageItem()
    override var snapCommandHint = LanguageItem()
    override var moveForwardCommandHint = LanguageItem()
    override var rotateRelCommandHint = LanguageItem()
    override var entityTypeCommandHint = LanguageItem()
    override var entityVisibleCommandHint = LanguageItem()
    override var groundOffSetCommandHint = LanguageItem()
    override var manipulateOtherMessage = LanguageItem()
    override var reloadCommandHint = LanguageItem()
    override var closeCommandHint = LanguageItem()
    override var backCommandHint = LanguageItem()
    override var openCommandHint = LanguageItem()
    override var nextCommandHint = LanguageItem()
    override var messageCommandHint = LanguageItem()
    override var guiMenuNotFoundMessage = LanguageItem()
    override var guiMenuNoPermissionMessage = LanguageItem()
    override var variableCommandHint = LanguageItem()
    override var variableChangedMessage = LanguageItem()
    override var velocityRelCommandHint = LanguageItem()
    override val names: List<String>
        get() = listOf("en_us", "es_es")

}
