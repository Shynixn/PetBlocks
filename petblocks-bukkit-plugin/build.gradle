import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

apply plugin: 'jacoco'

shadowJar {
    archiveName = "$baseName-$version.$extension"

    // Change the output folder of the plugin.
    // destinationDir = new File('D:\\Benutzer\\Temp\\plugins')

    relocate 'kotlin', 'com.github.shynixn.petblocks.lib.kotlin'
    relocate 'org.intellij', 'com.github.shynixn.petblocks.lib.org.intellij'
    relocate 'org.jetbrains', 'com.github.shynixn.petblocks.lib.org.jetbrains'
    relocate 'org.bstats', 'com.github.shynixn.petblocks.lib.org.bstats'
    relocate 'javax.inject', 'com.github.shynixn.petblocks.lib.javax.inject'
    relocate 'org.aopalliance', 'com.github.shynixn.petblocks.lib.org.aopalliance'
    relocate 'org.slf4j', 'com.github.shynixn.petblocks.lib.org.slf4j'
    relocate 'com.google', 'com.github.shynixn.petblocks.lib.com.google'
    relocate 'com.zaxxer', 'com.github.shynixn.petblocks.lib.com.zaxxer'
    relocate 'org.apache', 'com.github.shynixn.petblocks.lib.org.apache'
}

tasks {
    test {
        testLogging {
            events(TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.STARTED)
            displayGranularity = 0
            showExceptions = true
            showCauses = true
            showStackTraces = true
            exceptionFormat = TestExceptionFormat.FULL
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
        }
    }
}

repositories {
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://repo.codemc.org/repository/maven-public"
    }
}

task dockerJar(type: Exec, dependsOn: shadowJar) {
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', "docker cp build/libs/. petblocks-1.15:/minecraft/plugins"
    } else {
        commandLine 'sh', '-c', "docker cp build/libs/. petblocks-1.15:/minecraft/plugins"
    }
}

dependencies {
    implementation project(':petblocks-api')
    implementation project(':petblocks-core')
    implementation project(':petblocks-bukkit-api')

    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-108R3')
    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-109R2')
    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-110R1')
    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-111R1')
    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-112R1')
    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-113R2')
    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-114R1')
    implementation project(':petblocks-bukkit-plugin:petblocks-bukkit-nms-115R1')

    implementation 'org.slf4j:slf4j-jdk14:1.7.25'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.google.inject:guice:4.1.0'
    implementation 'com.zaxxer:HikariCP:3.2.0'
    implementation 'org.bstats:bstats-bukkit:1.7'
    implementation 'com.google.code.gson:gson:2.8.6'

    compileOnly 'org.spigotmc:spigot114R1:1.14.4-R1.0'
    compileOnly 'me.arcaniax.hdb:HeadDatabaseAPI:1.0'

    testCompile 'org.jetbrains.kotlin:kotlin-test'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
    testCompile 'org.mockito:mockito-core:2.23.0'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.xerial:sqlite-jdbc:3.23.1'
    testCompile 'ch.vorburger.mariaDB4j:mariaDB4j:2.2.3'
    testCompile 'org.spigotmc:spigot18R3:1.8.8-R3.0'

    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}